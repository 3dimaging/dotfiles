# @gf3’s Sexy Bash Prompt, inspired by "Extravagant Zsh Prompt"
# Shamelessly copied from https://github.com/gf3/dotfiles

if [ -t 0 ]; then

  ##
  # colored highlighting is awesome
  ##

  if [ "$TERM" != "dumb" -a -x "$(which dircolors 2>/dev/null)" ]; then
    eval "$(dircolors -b ~/.dir_colors)"
  fi

  MAGENTA=9
  ORANGE=172
  GREEN=190
  PURPLE=5
  WHITE=240
  RESET="\[$(tput sgr0)\]"

  PATHBG=237
  PATHFG=250
  CWD_FG=254
  SEP_FG=244

  PASSBG=236
  PASSFG=15
  FAILBG=161
  FAILFG=15

  function _fg () {
    tput setaf $1
  }

  function _bg () {
    tput setab $1
  }

  function parse_git_dirty () {
    [[ $(git status 2> /dev/null | tail -1) != "nothing to commit (working directory clean)" ]] && echo "*"
  }

  function parse_git_hg_branch () {
    local st=$(git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/")
    [ -z "$st" ] && st=$(fast-hg-bookmark 2> /dev/null)$(fast-hg-status 2> /dev/null)
    [ -n "$st" ] && printf "$(_fg $WHITE) on $(_fg $PURPLE)$st"
  }

  function pretty_dir () {
    local path=${1//$HOME/'~'}
    local dir=$(dirname $path | perl -pe 's,^[^~],,')
    local dir=${dir//\//$(_fg $SEP_FG) ⮁ $(_fg $PATHFG)}
    _fg $PATHFG
    printf "$(echo $dir)"
    [ -n "$dir" ] && printf "$(_fg $SEP_FG) ⮁ "
    printf "$(_fg $CWD_FG)$(basename $path)"
  }

  PS1="$(_fg $MAGENTA)\u $(_fg $WHITE)at $(_fg $ORANGE)\h $(_fg $WHITE)in $(_fg $GREEN)\$(pretty_dir \$PWD)\$(parse_git_hg_branch)$(_fg $WHITE)\n\$ $RESET"

fi
